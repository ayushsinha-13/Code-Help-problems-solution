#include<iostream>
#include<queue>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    
    node(int d){
        this->data = d;
        this->left = NULL;
        this->right = NULL;
    }
};

node* buildTree(node* root){
    int d;
    cin>>d;
    
    root = new node(d);
    
    if(d == -1){
        return NULL;
    }
    
    // Enter the data to the left
    root->left = buildTree(root->left);
    
    // Enter the data to the right
    root->right = buildTree(root->right);
    
    return root;
}

void inorder(node* root){
    if(root == NULL){
        return;
    }
    
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

void preorder(node* root){
    if(root == NULL){
        return;
    }
    
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}

void postorder(node* root){
    if(root == NULL){
        return ;
    }
    
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}

void levelOrder(node* root){
    queue<node*> q;
    q.push(root);
    q.push(NULL);
    
    while(!q.empty()){
        node* temp = q.front();
        if(temp != NULL){
            cout<<temp->data<<" ";
        }
        q.pop();
        
        if(temp == NULL){
            cout<<endl;
            
            if(!q.empty()){
                q.push(NULL);
            }
        }else{
            if(temp->left){
                q.push(temp->left);
            }
        
            if(temp->right){
                q.push(temp->right);
            }
        }
    }
}

int main(){
    node* root = NULL;
    root = buildTree(root);
    
    cout<<"In Order: ";
    inorder(root);
    
    cout<<endl;
    
    cout<<"Pre Order: ";
    preorder(root);
    
    cout<<endl;
    
    cout<<"Post Order: ";
    postorder(root);
    
    cout<<endl;
    
    cout<<"Level Order: "<<endl;
    levelOrder(root);
}
